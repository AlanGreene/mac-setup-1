* Complete OS X Setup

From clean install to fully configured.

** Step 1: Init Environment
:PROPERTIES:
:tangle: step-1.command
:shebang: #!/bin/sh
:END:
*** Temporarily Disable ~sudo~ Password Timeout
The ~sudo~ password timeout is re-enabled at the end of this script.
#+BEGIN_SRC sh
sudo tee -a /etc/sudoers > /dev/null <<-EOF
Defaults  timestamp_timeout=-1
%admin ALL=(ALL) NOPASSWD:SETENV: /usr/sbin/installer
EOF
#+END_SRC

*** Disable System and Disk Sleep
#+BEGIN_SRC sh
sudo pmset -a sleep 0
sudo pmset -a disksleep 0
#+END_SRC

*** Setup Required Paths
#+BEGIN_SRC sh
if ! grep -Fq '/usr/local/sbin' /etc/paths; then
  sudo sed -i -e '/\/usr\/sbin/i\
\/usr\/local\/sbin\
' /etc/paths
fi

sudo mkdir -p '/usr/local/Caskroom' '/Library/Caches/Homebrew/'
sudo chgrp admin '/usr/local/' '/usr/local/Caskroom/' '/Library/Caches/Homebrew/' '/Library/ColorPickers/' '/Library/Screen Savers/'
sudo chmod g+w '/usr/local/' '/usr/local/Caskroom/' '/Library/Caches/Homebrew/' '/Library/ColorPickers/' '/Library/Screen Savers/'
#+END_SRC

*** Set Environment Variables Permanently (after restart)
Details: http://stackoverflow.com/a/26477515/1959421

**** Create /etc/environment
#+BEGIN_SRC sh
sudo tee /etc/environment > /dev/null <<-EOF
#!/bin/sh

set -e

syslog -s -l warn "Set environment variables for \$(whoami) - start"

CASK_OPTS="--appdir=/Applications"
CASK_OPTS="\${CASK_OPTS} --caskroom=/usr/local/Caskroom"
CASK_OPTS="\${CASK_OPTS} --colorpickerdir=/Library/ColorPickers"
CASK_OPTS="\${CASK_OPTS} --fontdir=/Library/Fonts"
CASK_OPTS="\${CASK_OPTS} --prefpanedir=/Library/PreferencePanes"
CASK_OPTS="\${CASK_OPTS} --screen_saverdir='/Library/Screen Savers'"
export HOMEBREW_CASK_OPTS=\$CASK_OPTS
launchctl setenv HOMEBREW_CASK_OPTS "\$CASK_OPTS"

if [ -x /usr/libexec/path_helper ]; then
  export PATH=""
  eval \`/usr/libexec/path_helper -s\`
  launchctl setenv PATH \$PATH
fi

osascript -e 'tell app "Dock" to quit'

syslog -s -l warn "Set environment variables for \$(whoami) - complete"
EOF

sudo chmod a+x /etc/environment
#+END_SRC

**** Create /Library/LaunchAgents/environment.user for GUI Applications
#+BEGIN_SRC sh
sudo defaults write '/Library/LaunchAgents/environment.user' 'Label' -string 'environment.user'
sudo defaults write '/Library/LaunchAgents/environment.user' 'ProgramArguments' -array-add '/etc/environment'
sudo defaults write '/Library/LaunchAgents/environment.user' 'RunAtLoad' -bool true
sudo defaults write '/Library/LaunchAgents/environment.user' 'WatchPaths' -array-add '/etc/environment'
sudo defaults write '/Library/LaunchAgents/environment.user' 'WatchPaths' -array-add '/etc/paths'
sudo defaults write '/Library/LaunchAgents/environment.user' 'WatchPaths' -array-add '/etc/paths.d'
sudo plutil -convert xml1 '/Library/LaunchAgents/environment.user.plist'
sudo chmod 644 /Library/LaunchAgents/environment.user.plist
sudo launchctl load -w /Library/LaunchAgents/environment.user.plist
#+END_SRC

**** Create /Library/LaunchDaemons/environment for Terminal Applications
#+BEGIN_SRC sh
sudo defaults write '/Library/LaunchDaemons/environment' 'Label' -string 'environment'
sudo defaults write '/Library/LaunchDaemons/environment' 'ProgramArguments' -array-add '/etc/environment'
sudo defaults write '/Library/LaunchDaemons/environment' 'RunAtLoad' -bool true
sudo defaults write '/Library/LaunchDaemons/environment' 'WatchPaths' -array-add '/etc/environment'
sudo defaults write '/Library/LaunchDaemons/environment' 'WatchPaths' -array-add '/etc/paths'
sudo defaults write '/Library/LaunchDaemons/environment' 'WatchPaths' -array-add '/etc/paths.d'
sudo plutil -convert xml1 '/Library/LaunchDaemons/environment.plist'
sudo chmod 644 /Library/LaunchDaemons/environment.plist
sudo launchctl load -w /Library/LaunchDaemons/environment.plist
#+END_SRC

*** Restart Before Continuing
#+BEGIN_SRC sh
osascript -e 'tell app "loginwindow" to «event aevtrrst»'
#+END_SRC


** Step 2: Install Software
:PROPERTIES:
:tangle: step-2.command
:shebang: #!/bin/sh
:END:
*** Open New Terminal
#+BEGIN_SRC sh
if [ -z "$1" ]; then
  osascript > /dev/null <<-END
    tell app "Terminal" to do script "source ${0} 0"
END
  clear

else
#+END_SRC

*** Initialize Variables
#+BEGIN_SRC sh
function init_install_path () {
  if [ ! -d "/Volumes/Storage" ] \
    && [ -d "/Volumes/VMware Shared Folders/Storage" ]; then
    cd "/Volumes" \
      && sudo ln -s "VMware Shared Folders/Storage" "Storage"
  fi

  if [ -d "/Volumes/Storage/Software" ]; then
    INSTALL_PATH="/Volumes/Storage/Software"
  else
    INSTALL_PATH="${HOME}/Downloads"
  fi
}
#+END_SRC

*** Install Command Line Tools
#+BEGIN_SRC sh
function install_command_line_tools () {
  init_install_path

  INSTALL_PATH_XCODE="${INSTALL_PATH}/apple.com"

  if [ ! -d "${INSTALL_PATH_XCODE}" ]; then
    mkdir -p "${INSTALL_PATH_XCODE}"
  fi

  if [ ! -f "${INSTALL_PATH_XCODE}/CLTools_Executables.pkg" ] \
    || [ ! -f "${INSTALL_PATH_XCODE}/DevSDK_OSX1011.pkg" ]; then
    cd "${INSTALL_PATH_XCODE}" \
      && curl --compressed --location --silent \
      "https://swscan.apple.com/content/catalogs/others/index-10.11-10.10-10.9-mountainlion-lion-snowleopard-leopard.merged-1.sucatalog.gz" \
      | sed -n \
        -e "s/^.*<string>\(.*CLTools_Executables.pkg\).*/\1/p" \
        -e "s/^.*<string>\(.*DevSDK_OSX1011.pkg\).*/\1/p" \
      | tail -n 2 \
      | xargs -L 1 curl --compressed --location --remote-name
  fi

  if [ -f "${INSTALL_PATH_XCODE}/CLTools_Executables.pkg" ] \
    && [ -f "${INSTALL_PATH_XCODE}/DevSDK_OSX1011.pkg" ]; then
    sudo installer -pkg "${INSTALL_PATH_XCODE}/CLTools_Executables.pkg" -target /
    sudo installer -pkg "${INSTALL_PATH_XCODE}/DevSDK_OSX1011.pkg" -target /
  fi
}
#+END_SRC

*** Install Homebrew
Details: http://brew.sh

#+BEGIN_SRC sh
function install_homebrew () {
  sudo chown $(whoami) '/usr/local' '/usr/local/Caskroom' '/Library/Caches/Homebrew/'

  ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"

  brew update
  brew doctor

  brew tap "caskroom/cask"
  brew tap "homebrew/bundle"

  brew install hub
  cd "/usr/local/Library/Taps/caskroom/homebrew-cask" \
    && hub checkout https://github.com/caskroom/homebrew-cask/pull/13966 \
    && curl https://gist.githubusercontent.com/ptb/2685546c5fa068f0506e7040726aec41/raw/c7afacc2229db2b1a880c467fd0ac81328631525/13966.patch | git apply -
}
#+END_SRC

*** Create Brewfile
Details: https://github.com/Homebrew/homebrew-bundle

#+BEGIN_SRC sh
function create_brewfile () {
  cat > /usr/local/Brewfile <<-EOF
tap "caskroom/cask"
tap "caskroom/fonts"
tap "caskroom/versions"
tap "homebrew/bundle"
tap "homebrew/dupes"
tap "homebrew/nginx"
tap "infinit/releases"
tap "ptb/custom"
tap "railwaycat/emacsmacport"

cask "java"

brew "aspell", args: ["lang=en"]
brew "duti"
brew "railwaycat/emacsmacport/emacs-mac", args: ["with-spacemacs-icon"]
brew "ffmpeg",
  args: [
  "with-dcadec",
  "with-faac",
  "with-fdk-aac",
  "with-ffplay",
  "with-fontconfig",
  "with-freetype",
  "with-frei0r",
  "with-lame",
  "with-libass",
  "with-libbluray",
  "with-libbs2b",
  "with-libcaca",
  "with-libsoxr",
  "with-libssh",
  "with-libvidstab",
  "with-libvorbis",
  "with-libvpx",
  "with-opencore-amr",
  "with-openh264",
  "with-openjpeg",
  "with-openssl",
  "with-opus",
  "with-pkg-config",
  "with-qtkit",
  "with-rtmpdump",
  "with-rubberband",
  "with-schroedinger",
  "with-sdl",
  "with-snappy",
  "with-speex",
  "with-texi2html",
  "with-theora",
  "with-tools",
  "with-webp",
  "with-x264",
  "with-x265",
  "with-xvid",
  "with-yasm",
  "with-zeromq",
  "with-zimg" ]
brew "git"
brew "git-annex"
brew "gnu-sed", args: ["with-default-names"]
brew "gnupg"
brew "gpac"
brew "hub"
brew "imagemagick"
brew "mercurial"
brew "mp4v2"
brew "mtr"
brew "nmap"
brew "homebrew/nginx/nginx-full",
  args: [
  "with-dav-ext-module",
  "with-fancyindex-module",
  "with-gzip-static",
  "with-http2",
  "with-mp4-h264-module",
  "with-passenger",
  "with-push-stream-module",
  "with-secure-link",
  "with-webdav" ]
brew "node"
brew "openssl"
brew "homebrew/dupes/rsync"
brew "python"
brew "ruby"
brew "sqlite"
brew "stow"
brew "terminal-notifier"
brew "trash"
brew "vim"
brew "wget"
brew "wine"
brew "youtube-dl"
brew "zsh"

cask "adium"
cask "adobe-illustrator-cc"
cask "adobe-indesign-cc"
cask "adobe-photoshop-cc"
cask "airfoil"
cask "alfred"
cask "arduino"
cask "atom"
cask "autodmg"
cask "bettertouchtool"
cask "caffeine"
cask "carbon-copy-cloner"
cask "charles"
cask "couchpotato"
cask "dash"
# cask "datetree"
cask "deluge"
# cask "disk-inventory-x"
cask "dockertoolbox"
cask "dropbox"
cask "duet"
cask "exifrenamer"
cask "expandrive"
cask "firefox"
cask "flux"
cask "github-desktop"
cask "gitup"
cask "google-chrome"
cask "handbrake"
cask "handbrakecli"
cask "hermes"
cask "imageoptim"
cask "integrity"
cask "istat-menus"
cask "jubler"
cask "little-snitch"
cask "machg"
cask "makemkv"
cask "menubar-countdown"
cask "meteorologist"
cask "microsoft-office"
cask "moom"
cask "mp4tools"
cask "munki"
cask "musicbrainz-picard"
cask "namechanger"
cask "nvalt"
cask "nzbget"
cask "nzbvortex"
cask "openemu"
cask "opera"
cask "caskroom/versions/osxfuse-beta"
cask "pacifist"
cask "platypus"
cask "plex-media-server"
cask "quitter"
cask "raindrop"
cask "rescuetime"
# cask "safari-technology-preview"
cask "scrivener"
cask "sitesucker"
cask "sizeup"
cask "sketch"
cask "sketchup"
cask "skitch"
cask "skype"
cask "slack"
cask "sonarr"
cask "sonarr-menu"
cask "sourcetree"
cask "steermouse"
cask "subler"
cask "caskroom/versions/sublime-text3"
cask "time-sink"
# cask "timing"
cask "the-unarchiver"
# cask "tidy-up"
cask "torbrowser"
cask "tower"
cask "transmit"
cask "vimr"
cask "vlc"
cask "vmware-fusion"
# cask "webkit-nightly"
cask "xld"

cask "xquartz"
cask "inkscape"
cask "wireshark"

cask "caskroom/fonts/font-inconsolata-lgc"

cask "infinit/releases/infinit"

cask "ptb/custom/bbedit-10"
cask "ptb/custom/blankscreen"
cask "ptb/custom/composer"
cask "ptb/custom/enhanced-dictation"
cask "ptb/custom/ipmenulet"
cask "ptb/custom/mas-1password"
cask "ptb/custom/mas-affinity-photo"
cask "ptb/custom/mas-autoping"
cask "ptb/custom/mas-coffitivity"
cask "ptb/custom/mas-growl"
cask "ptb/custom/mas-hardwaregrowler"
cask "ptb/custom/mas-i-love-stars"
cask "ptb/custom/mas-icon-slate"
cask "ptb/custom/mas-justnotes"
cask "ptb/custom/mas-keynote"
cask "ptb/custom/mas-numbers"
cask "ptb/custom/mas-pages"
cask "ptb/custom/mas-wifi-explorer"
cask "ptb/custom/mas-xcode"
cask "ptb/custom/pcalc-3"
cask "ptb/custom/sketchup-pro"
cask "ptb/custom/synergy"
cask "ptb/custom/text-to-speech-allison"
cask "ptb/custom/tune4mac"
EOF
}
#+END_SRC

*** Install OS X Software
#+BEGIN_SRC sh
function install_osx_software () {
  init_install_path

  INSTALL_PATH_HOMEBREW="${INSTALL_PATH}/github.com/Homebrew"

  if [ -d "${INSTALL_PATH_HOMEBREW}" ]; then
    cd "$(cd "${INSTALL_PATH_HOMEBREW}" && pwd)" \
      && cp -av * /Library/Caches/Homebrew/
  fi

  cd /usr/local/ && brew bundle

  brew upgrade --all
  brew linkapps

  cd $(cd /usr/local/Caskroom/little-snitch/* && pwd) && open "Little Snitch Installer.app"
}
#+END_SRC

*** Install Node Software
#+BEGIN_SRC sh
function install_node_software () {
  npm i -g babel-cli bower browser-sync browserify coffee-script eslint gulp-cli polyserve riot superstatic svgo uglify-js watchify webpack
}
#+END_SRC

*** Install Python Software
#+BEGIN_SRC sh
function install_python_software () {
  curl -Ls https://bootstrap.pypa.io/get-pip.py | sudo -H python
  pip install --upgrade pip setuptools
  pip install --upgrade babelfish bottle 'guessit<2' influxdb netifaces pika psutil py2app pyobjc-core pysnmp pystache qtfaststart requests scour statsd subliminal watchdog yapf zeroconf
  pip install --upgrade glances pyobjc 'requests[security]'
}
#+END_SRC

*** Install Ruby Software
#+BEGIN_SRC sh
function install_ruby_software () {
  printf "%s\n" \
    "gem: --no-document" \
    >> "${HOME}/.gemrc"

  gem update --system
  gem update
  gem install nokogiri -- --use-system-libraries
  gem install web-console --version "~> 2"
  gem install rails sqlite3 sass-rails uglifier coffee-rails jquery-rails turbolinks jbuilder sdoc byebug spring tzinfo-data
  gem install em-websocket middleman middleman-autoprefixer middleman-blog middleman-compass middleman-livereload middleman-minify-html middleman-robots mime-types slim
  gem install bootstrap-sass git-cipher org-ruby thin
}
#+END_SRC

*** Create ~/usr/local/bin/vi~ Script
#+BEGIN_SRC sh
function create_vi_script () {
  cat > /usr/local/bin/vi <<-EOF
#!/bin/sh

if [ -e '/Applications/Emacs.app' ]; then
  t=()

  if [ \${#@} -ne 0 ]; then
    while IFS= read -r file; do
      [ ! -f "\$file" ] && t+=("\$file") && /usr/bin/touch "\$file"
      file=\$(echo \$(cd \$(dirname "\$file") && pwd -P)/\$(basename "\$file"))
      \$(/usr/bin/osascript <<-END
        if application "Emacs.app" is running then
          tell application id (id of application "Emacs.app") to open POSIX file "\$file"
        else
          tell application ((path to applications folder as text) & "Emacs.app")
            activate
            open POSIX file "\$file"
          end tell
        end if
END
        ) &  # Note: END on the previous line may be indented with tabs but not spaces
      done <<<"\$(printf '%s\n' "\$@")"
    fi

    if [ ! -z "\$t" ]; then
      \$(/bin/sleep 10; for file in "\${t[@]}"; do
        [ ! -s "\$file" ] && /bin/rm "\$file";
      done) &
    fi
  else
    vim -No "\$@"
  fi
EOF

  chmod a+x /usr/local/bin/vi
}
#+END_SRC

*** Link Utilities
#+BEGIN_SRC sh
function link_utilities () {
  cd /Applications/Utilities \
    && for a in /System/Library/CoreServices/Applications/*; do
      sudo ln -s "../..$a" .
    done \
    && for b in /Applications/Xcode.app/Contents/Applications/*; do
      sudo ln -s "../..$b" .
    done \
    && for c in /Applications/Xcode.app/Contents/Developer/Applications/*; do
      sudo ln -s "../..$c" .
    done
}
#+END_SRC

*** Re-enable ~sudo~ Password Timeout
#+BEGIN_SRC sh
function reenable_sudo_timeout () {
  sudo sed -i -e "/Defaults  timestamp_timeout=-1/d" /etc/sudoers
  sudo sed -i -e "/%admin ALL=(ALL) NOPASSWD:SETENV: \/usr\/sbin\/installer/d" /etc/sudoers
}
#+END_SRC

*** Install All
#+BEGIN_SRC sh
function install_all () {
  install_command_line_tools
  install_homebrew
  create_brewfile
  install_osx_software
  install_node_software
  install_python_software
  install_ruby_software
  create_vi_script
  link_utilities
  reenable_sudo_timeout
}
#+END_SRC

*** Display Help
#+BEGIN_SRC sh
clear
cat <<-END

Enter any of these commands:
  install_command_line_tools
  install_homebrew
  create_brewfile
  install_osx_software
  install_node_software
  install_python_software
  install_ruby_software
  create_vi_script
  link_utilities
  reenable_sudo_timeout

Or:
  install_all

END
fi
#+END_SRC


** Step 3: Configure Prefs
:PROPERTIES:
:tangle: step-3.command
:shebang: #!/bin/sh
:END:
*** Open New Terminal
#+BEGIN_SRC sh
if [ -z "$1" ]; then
  osascript > /dev/null <<-END
    tell app "Terminal" to do script "source ${0} 0"
END
  clear

else
#+END_SRC

*** Configure File Mappings
#+BEGIN_SRC sh
function config_file_map () {
  if [ -x "/usr/local/bin/duti" ]; then
    printf "%s\t%s\t%s\n" \
      "org.videolan.vlc" "public.avi" "all" \
      "com.VortexApps.NZBVortex3" "dyn.ah62d4rv4ge8068xc" "all" \
      "com.apple.DiskImageMounter" "com.apple.disk-image" "all" \
      "com.apple.DiskImageMounter" "public.disk-image" "all" \
      "com.apple.DiskImageMounter" "public.iso-image" "all" \
      "com.apple.QuickTimePlayerX" "com.apple.coreaudio-format" "all" \
      "com.apple.QuickTimePlayerX" "com.apple.quicktime-movie" "all" \
      "com.apple.QuickTimePlayerX" "com.microsoft.waveform-audio" "all" \
      "com.apple.QuickTimePlayerX" "public.aifc-audio" "all" \
      "com.apple.QuickTimePlayerX" "public.aiff-audio" "all" \
      "com.apple.QuickTimePlayerX" "public.audio" "all" \
      "com.apple.QuickTimePlayerX" "public.mp3" "all" \
      "com.apple.Safari" "com.compuserve.gif" "all" \
      "com.apple.Terminal" "com.apple.terminal.shell-script" "all" \
      "com.apple.iTunes" "com.apple.iTunes.audible" "all" \
      "com.apple.iTunes" "com.apple.iTunes.ipg" "all" \
      "com.apple.iTunes" "com.apple.iTunes.ipsw" "all" \
      "com.apple.iTunes" "com.apple.iTunes.ite" "all" \
      "com.apple.iTunes" "com.apple.iTunes.itlp" "all" \
      "com.apple.iTunes" "com.apple.iTunes.itms" "all" \
      "com.apple.iTunes" "com.apple.iTunes.podcast" "all" \
      "com.apple.iTunes" "com.apple.m4a-audio" "all" \
      "com.apple.iTunes" "com.apple.mpeg-4-ringtone" "all" \
      "com.apple.iTunes" "com.apple.protected-mpeg-4-audio" "all" \
      "com.apple.iTunes" "com.apple.protected-mpeg-4-video" "all" \
      "com.apple.iTunes" "com.audible.aa-audio" "all" \
      "com.apple.iTunes" "public.mpeg-4-audio" "all" \
      "com.apple.installer" "com.apple.installer-package-archive" "all" \
      "com.github.atom" "com.apple.binary-property-list" "editor" \
      "com.github.atom" "com.apple.crashreport" "editor" \
      "com.github.atom" "com.apple.dt.document.ascii-property-list" "editor" \
      "com.github.atom" "com.apple.dt.document.script-suite-property-list" "editor" \
      "com.github.atom" "com.apple.dt.document.script-terminology-property-list" "editor" \
      "com.github.atom" "com.apple.log" "editor" \
      "com.github.atom" "com.apple.property-list" "editor" \
      "com.github.atom" "com.apple.rez-source" "editor" \
      "com.github.atom" "com.apple.symbol-export" "editor" \
      "com.github.atom" "com.apple.xcode.ada-source" "editor" \
      "com.github.atom" "com.apple.xcode.bash-script" "editor" \
      "com.github.atom" "com.apple.xcode.configsettings" "editor" \
      "com.github.atom" "com.apple.xcode.csh-script" "editor" \
      "com.github.atom" "com.apple.xcode.fortran-source" "editor" \
      "com.github.atom" "com.apple.xcode.ksh-script" "editor" \
      "com.github.atom" "com.apple.xcode.lex-source" "editor" \
      "com.github.atom" "com.apple.xcode.make-script" "editor" \
      "com.github.atom" "com.apple.xcode.mig-source" "editor" \
      "com.github.atom" "com.apple.xcode.pascal-source" "editor" \
      "com.github.atom" "com.apple.xcode.strings-text" "editor" \
      "com.github.atom" "com.apple.xcode.tcsh-script" "editor" \
      "com.github.atom" "com.apple.xcode.yacc-source" "editor" \
      "com.github.atom" "com.apple.xcode.zsh-script" "editor" \
      "com.github.atom" "com.apple.xml-property-list" "editor" \
      "com.github.atom" "com.barebones.bbedit.actionscript-source" "editor" \
      "com.github.atom" "com.barebones.bbedit.erb-source" "editor" \
      "com.github.atom" "com.barebones.bbedit.ini-configuration" "editor" \
      "com.github.atom" "com.barebones.bbedit.javascript-source" "editor" \
      "com.github.atom" "com.barebones.bbedit.json-source" "editor" \
      "com.github.atom" "com.barebones.bbedit.jsp-source" "editor" \
      "com.github.atom" "com.barebones.bbedit.lasso-source" "editor" \
      "com.github.atom" "com.barebones.bbedit.lua-source" "editor" \
      "com.github.atom" "com.barebones.bbedit.setext-source" "editor" \
      "com.github.atom" "com.barebones.bbedit.sql-source" "editor" \
      "com.github.atom" "com.barebones.bbedit.tcl-source" "editor" \
      "com.github.atom" "com.barebones.bbedit.tex-source" "editor" \
      "com.github.atom" "com.barebones.bbedit.textile-source" "editor" \
      "com.github.atom" "com.barebones.bbedit.vbscript-source" "editor" \
      "com.github.atom" "com.barebones.bbedit.vectorscript-source" "editor" \
      "com.github.atom" "com.barebones.bbedit.verilog-hdl-source" "editor" \
      "com.github.atom" "com.barebones.bbedit.vhdl-source" "editor" \
      "com.github.atom" "com.barebones.bbedit.yaml-source" "editor" \
      "com.github.atom" "com.netscape.javascript-source" "editor" \
      "com.github.atom" "com.sun.java-source" "editor" \
      "com.github.atom" "dyn.ah62d4rv4ge80255drq" "all" \
      "com.github.atom" "dyn.ah62d4rv4ge80g55gq3w0n" "all" \
      "com.github.atom" "dyn.ah62d4rv4ge80g55sq2" "all" \
      "com.github.atom" "dyn.ah62d4rv4ge80y2xzrf0gk3pw" "all" \
      "com.github.atom" "dyn.ah62d4rv4ge81e3dtqq" "all" \
      "com.github.atom" "dyn.ah62d4rv4ge81e7k" "all" \
      "com.github.atom" "dyn.ah62d4rv4ge81g25xsq" "all" \
      "com.github.atom" "dyn.ah62d4rv4ge81g2pxsq" "all" \
      "com.github.atom" "net.daringfireball.markdown" "editor" \
      "com.github.atom" "public.assembly-source" "editor" \
      "com.github.atom" "public.c-header" "editor" \
      "com.github.atom" "public.c-plus-plus-source" "editor" \
      "com.github.atom" "public.c-source" "editor" \
      "com.github.atom" "public.csh-script" "editor" \
      "com.github.atom" "public.json" "editor" \
      "com.github.atom" "public.lex-source" "editor" \
      "com.github.atom" "public.log" "editor" \
      "com.github.atom" "public.mig-source" "editor" \
      "com.github.atom" "public.nasm-assembly-source" "editor" \
      "com.github.atom" "public.objective-c-plus-plus-source" "editor" \
      "com.github.atom" "public.objective-c-source" "editor" \
      "com.github.atom" "public.patch-file" "editor" \
      "com.github.atom" "public.perl-script" "editor" \
      "com.github.atom" "public.php-script" "editor" \
      "com.github.atom" "public.plain-text" "editor" \
      "com.github.atom" "public.precompiled-c-header" "editor" \
      "com.github.atom" "public.precompiled-c-plus-plus-header" "editor" \
      "com.github.atom" "public.python-script" "editor" \
      "com.github.atom" "public.ruby-script" "editor" \
      "com.github.atom" "public.script" "editor" \
      "com.github.atom" "public.shell-script" "editor" \
      "com.github.atom" "public.source-code" "editor" \
      "com.github.atom" "public.text" "editor" \
      "com.github.atom" "public.utf16-external-plain-text" "editor" \
      "com.github.atom" "public.utf16-plain-text" "editor" \
      "com.github.atom" "public.utf8-plain-text" "editor" \
      "com.github.atom" "public.xml" "editor" \
      "com.kodlian.Icon-Slate" "com.apple.icns" "all" \
      "com.kodlian.Icon-Slate" "com.microsoft.ico" "all" \
      "com.microsoft.Word" "public.rtf" "all" \
      "com.panayotis.jubler" "dyn.ah62d4rv4ge81g6xy" "all" \
      "com.sketchup.SketchUp.2016" "com.sketchup.skp" "all" \
      "com.vmware.fusion" "com.microsoft.windows-executable" "all" \
      "cx.c3.theunarchiver" "com.alcohol-soft.mdf-image" "all" \
      "cx.c3.theunarchiver" "com.allume.stuffit-archive" "all" \
      "cx.c3.theunarchiver" "com.altools.alz-archive" "all" \
      "cx.c3.theunarchiver" "com.amiga.adf-archive" "all" \
      "cx.c3.theunarchiver" "com.amiga.adz-archive" "all" \
      "cx.c3.theunarchiver" "com.apple.applesingle-archive" "all" \
      "cx.c3.theunarchiver" "com.apple.binhex-archive" "all" \
      "cx.c3.theunarchiver" "com.apple.bom-compressed-cpio" "all" \
      "cx.c3.theunarchiver" "com.apple.itunes.ipa" "all" \
      "cx.c3.theunarchiver" "com.apple.macbinary-archive" "all" \
      "cx.c3.theunarchiver" "com.apple.self-extracting-archive" "all" \
      "cx.c3.theunarchiver" "com.apple.xar-archive" "all" \
      "cx.c3.theunarchiver" "com.apple.xip-archive" "all" \
      "cx.c3.theunarchiver" "com.cyclos.cpt-archive" "all" \
      "cx.c3.theunarchiver" "com.microsoft.cab-archive" "all" \
      "cx.c3.theunarchiver" "com.microsoft.msi-installer" "all" \
      "cx.c3.theunarchiver" "com.nero.nrg-image" "all" \
      "cx.c3.theunarchiver" "com.network172.pit-archive" "all" \
      "cx.c3.theunarchiver" "com.nowsoftware.now-archive" "all" \
      "cx.c3.theunarchiver" "com.nscripter.nsa-archive" "all" \
      "cx.c3.theunarchiver" "com.padus.cdi-image" "all" \
      "cx.c3.theunarchiver" "com.pkware.zip-archive" "all" \
      "cx.c3.theunarchiver" "com.rarlab.rar-archive" "all" \
      "cx.c3.theunarchiver" "com.redhat.rpm-archive" "all" \
      "cx.c3.theunarchiver" "com.stuffit.archive.sit" "all" \
      "cx.c3.theunarchiver" "com.stuffit.archive.sitx" "all" \
      "cx.c3.theunarchiver" "com.sun.java-archive" "all" \
      "cx.c3.theunarchiver" "com.symantec.dd-archive" "all" \
      "cx.c3.theunarchiver" "com.winace.ace-archive" "all" \
      "cx.c3.theunarchiver" "com.winzip.zipx-archive" "all" \
      "cx.c3.theunarchiver" "cx.c3.arc-archive" "all" \
      "cx.c3.theunarchiver" "cx.c3.arj-archive" "all" \
      "cx.c3.theunarchiver" "cx.c3.dcs-archive" "all" \
      "cx.c3.theunarchiver" "cx.c3.dms-archive" "all" \
      "cx.c3.theunarchiver" "cx.c3.ha-archive" "all" \
      "cx.c3.theunarchiver" "cx.c3.lbr-archive" "all" \
      "cx.c3.theunarchiver" "cx.c3.lha-archive" "all" \
      "cx.c3.theunarchiver" "cx.c3.lhf-archive" "all" \
      "cx.c3.theunarchiver" "cx.c3.lzx-archive" "all" \
      "cx.c3.theunarchiver" "cx.c3.packdev-archive" "all" \
      "cx.c3.theunarchiver" "cx.c3.pax-archive" "all" \
      "cx.c3.theunarchiver" "cx.c3.pma-archive" "all" \
      "cx.c3.theunarchiver" "cx.c3.pp-archive" "all" \
      "cx.c3.theunarchiver" "cx.c3.xmash-archive" "all" \
      "cx.c3.theunarchiver" "cx.c3.zoo-archive" "all" \
      "cx.c3.theunarchiver" "cx.c3.zoom-archive" "all" \
      "cx.c3.theunarchiver" "org.7-zip.7-zip-archive" "all" \
      "cx.c3.theunarchiver" "org.archive.warc-archive" "all" \
      "cx.c3.theunarchiver" "org.debian.deb-archive" "all" \
      "cx.c3.theunarchiver" "org.gnu.gnu-tar-archive" "all" \
      "cx.c3.theunarchiver" "org.gnu.gnu-zip-archive" "all" \
      "cx.c3.theunarchiver" "org.gnu.gnu-zip-tar-archive" "all" \
      "cx.c3.theunarchiver" "org.tukaani.lzma-archive" "all" \
      "cx.c3.theunarchiver" "org.tukaani.xz-archive" "all" \
      "cx.c3.theunarchiver" "public.bzip2-archive" "all" \
      "cx.c3.theunarchiver" "public.cpio-archive" "all" \
      "cx.c3.theunarchiver" "public.tar-archive" "all" \
      "cx.c3.theunarchiver" "public.tar-bzip2-archive" "all" \
      "cx.c3.theunarchiver" "public.z-archive" "all" \
      "cx.c3.theunarchiver" "public.zip-archive" "all" \
      "cx.c3.theunarchiver" "public.zip-archive.first-part" "all" \
      "org.gnu.Emacs" "dyn.ah62d4rv4ge8086xh" "all" \
      "org.inkscape.Inkscape" "public.svg-image" "editor" \
      "org.videolan.vlc" "com.apple.m4v-video" "all" \
      "org.videolan.vlc" "com.microsoft.windows-media-wmv" "all" \
      "org.videolan.vlc" "org.perian.matroska" "all" \
      "org.videolan.vlc" "org.videolan.ac3" "all" \
      "org.videolan.vlc" "org.videolan.ogg-audio" "all" \
      "org.videolan.vlc" "public.ac3-audio" "all" \
      "org.videolan.vlc" "public.audiovisual-content" "all" \
      "org.videolan.vlc" "public.avi" "all" \
      "org.videolan.vlc" "public.movie" "all" \
      "org.videolan.vlc" "public.mpeg" "all" \
      "org.videolan.vlc" "public.mpeg-2-video" "all" \
      "org.videolan.vlc" "public.mpeg-4" "all" \
      > "${HOME}/.duti"

      /usr/local/bin/duti "${HOME}/.duti"
    fi

    sudo mkdir -p /var/db/lsd
    sudo chown root:admin /var/db/lsd
    sudo chmod 775 /var/db/lsd

    /System/Library/Frameworks/CoreServices.framework/Versions/Current/Frameworks/LaunchServices.framework/Versions/Current/Support/lsregister -kill -r -domain local -domain system -domain user
  fi
}
#+END_SRC

*** Configure Finder
#+BEGIN_SRC sh
function config_finder () {
### Finder > Preferences… > General

  # Show these items on the desktop: Hard disks: on
  defaults write 'com.apple.finder' 'ShowHardDrivesOnDesktop' -bool false

  # Show these items on the desktop: External disks: on
  defaults write 'com.apple.finder' 'ShowExternalHardDrivesOnDesktop' -bool false

  # Show these items on the desktop: CDs, DVDs, and iPods: on
  defaults write 'com.apple.finder' 'ShowRemovableMediaOnDesktop' -bool false

  # Show these items on the desktop: Connected servers: on
  defaults write 'com.apple.finder' 'ShowMountedServersOnDesktop' -bool true

  # New Finder windows show: ${HOME}
  defaults write 'com.apple.finder' 'NewWindowTarget' -string 'PfHm'
  defaults write 'com.apple.finder' 'NewWindowTargetPath' -string "file://${HOME}/"

### Finder > Preferences… > Advanced

  # Show all filename extensions: on
  defaults write -g 'AppleShowAllExtensions' -bool true

  # Show warning before emptying the Trash: on
  defaults write 'com.apple.finder' 'WarnOnEmptyTrash' -bool false

### View

  # Show Path Bar
  defaults write 'com.apple.finder' 'ShowPathbar' -bool true

  # Show Status Bar
  defaults write 'com.apple.finder' 'ShowStatusBar' -bool true

  # Customize Toolbar…
  defaults write 'com.apple.finder' 'NSToolbar Configuration Browser' '{ "TB Item Identifiers" = ( "com.apple.finder.BACK", "com.apple.finder.PATH", "com.apple.finder.SWCH", "com.apple.finder.ARNG", "NSToolbarFlexibleSpaceItem", "com.apple.finder.SRCH", "com.apple.finder.ACTN" ); "TB Display Mode" = 2; }'

### View > Show View Options: [${HOME}]

  # Show Library Folder: on
  chflags nohidden "${HOME}/Library"

### Window

  # Copy
  defaults write 'com.apple.finder' 'CopyProgressWindowLocation' -string '{2160, 23}'
}
#+END_SRC

*** Configure Safari
#+BEGIN_SRC sh
function config_safari () {
### Safari > Preferences… > General

  # New windows open with: Empty Page
  defaults write 'com.apple.Safari' 'NewWindowBehavior' -int 1

  # New tabs open with: Empty Page
  defaults write 'com.apple.Safari' 'NewTabBehavior' -int 1

  # Homepage: about:blank
  defaults write 'com.apple.Safari' 'HomePage' -string 'about:blank'

### Safari > Preferences… > Tabs

  # Open pages in tabs instead of windows: Always
  defaults write 'com.apple.Safari' 'TabCreationPolicy' -int 2

### Safari > Preferences… > AutoFill

  # Using info from my Contacts card: off
  defaults write 'com.apple.Safari' 'AutoFillFromAddressBook' -bool false

  # Credit cards: off
  defaults write 'com.apple.Safari' 'AutoFillCreditCardData' -bool false

  # Other forms: off
  defaults write 'com.apple.Safari' 'AutoFillMiscellaneousForms' -bool false

### Safari > Preferences… > Search

  # Include Spotlight Suggestions: off
  defaults write 'com.apple.Safari' 'UniversalSearchEnabled' -bool false

  # Show Favorites: off
  defaults write 'com.apple.Safari' 'ShowFavoritesUnderSmartSearchField' -bool false

### Safari > Preferences… > Privacy

  # Website use of location services: Deny without prompting
  defaults write 'com.apple.Safari' 'SafariGeolocationPermissionPolicy' -int 0

  # Ask websites not to track me: on
  defaults write 'com.apple.Safari' 'SendDoNotTrackHTTPHeader' -bool true

### Safari > Preferences… > Notifications

  # Allow websites to ask for permission to send push notifications: off
  defaults write 'com.apple.Safari' 'CanPromptForPushNotifications' -bool false

### Safari > Preferences… > Advanced

  # Smart Search Field: Show full website address: on
  defaults write 'com.apple.Safari' 'ShowFullURLInSmartSearchField' -bool true

  # Default encoding: Unicode (UTF-8)
  defaults write 'com.apple.Safari' 'WebKitDefaultTextEncodingName' -string 'utf-8'
  defaults write 'com.apple.Safari' 'com.apple.Safari.ContentPageGroupIdentifier.WebKit2DefaultTextEncodingName' -string 'utf-8'

  # Show Develop menu in menu bar: on
  defaults write 'com.apple.Safari' 'IncludeDevelopMenu' -bool true
  defaults write 'com.apple.Safari' 'WebKitDeveloperExtrasEnabledPreferenceKey' -bool true
  defaults write 'com.apple.Safari' 'com.apple.Safari.ContentPageGroupIdentifier.WebKit2DeveloperExtrasEnabled' -bool true

### View

  # Show Favorites Bar
  defaults write 'com.apple.Safari' 'ShowFavoritesBar-v2' -bool true

  # Show Status Bar
  defaults write 'com.apple.Safari' 'ShowStatusBar' -bool true
  defaults write 'com.apple.Safari' 'ShowStatusBarInFullScreen' -bool true
}
#+END_SRC

*** Configure System Preferences
#+BEGIN_SRC sh
function config_system_prefs () {
### General

  # Appearance: Graphite
  defaults write -g 'AppleAquaColorVariant' -int 6

  # Use dark menu bar and Dock: on
  defaults write -g 'AppleInterfaceStyle' -string 'Dark'

  # Highlight color: Other… #CC99CC
  defaults write -g 'AppleHighlightColor' -string '0.600000 0.800000 0.600000'

  # Sidebar icon size: Small
  defaults write -g 'NSTableViewDefaultSizeMode' -int 1

  # Show scroll bars: Always
  defaults write -g 'AppleShowScrollBars' -string 'Always'

  # Click in the scroll bar to: Jump to the next page
  defaults write -g 'AppleScrollerPagingBehavior' -bool false

  # Ask to keep changes when closing documents: on
  defaults write -g 'NSCloseAlwaysConfirmsChanges' -bool true

  # Close windows when quitting an app: on
  defaults write -g 'NSQuitAlwaysKeepsWindows' -bool false

  # Recent items: None
  osascript <<-EOF
    tell application "System Events"
      tell appearance preferences
        set recent documents limit to 0
        set recent applications limit to 0
        set recent servers limit to 0
      end tell
    end tell
EOF

  # Use LCD font smoothing when available: on
  defaults -currentHost delete -g 'AppleFontSmoothing' 2> /dev/null

### Desktop & Screen Saver

  # Desktop: Solid Colors: Custom Color… Solid Black
  mkdir -m go= -p "${HOME}/Library/Desktop Pictures/Solid Colors/"
  base64 -D > "${HOME}/Library/Desktop Pictures/Solid Colors/Solid Black.png" <<-EOF
iVBORw0KGgoAAAANSUhEUgAAAIAAAACAAQAAAADrRVxmAAAAGElEQVR4AWOgMxgFo2AUjIJRMApG
wSgAAAiAAAH3bJXBAAAAAElFTkSuQmCC
EOF
  osascript <<-EOF
    tell application "System Events"
      set a to POSIX file "${HOME}/Library/Desktop Pictures/Solid Colors/Solid Black.png"
      set b to a reference to every desktop
      repeat with c in b
        set picture of c to a
      end repeat
    end tell
EOF

  # Screen Saver: BlankScreen
  if [ -e "/Library/Screen Savers/BlankScreen.saver" ]; then
    defaults -currentHost write 'com.apple.screensaver' 'moduleDict' '{ moduleName = BlankScreen; path = "/Library/Screen Savers/BlankScreen.saver"; type = 0; }'
  fi

  # Screen Saver: Start after: Never
  defaults -currentHost write 'com.apple.screensaver' 'idleTime' -int 0

  # Screen Saver: Hot Corners… Top Left: ⌘ Mission Control
  defaults write 'com.apple.dock' 'wvous-tl-corner' -int 2
  defaults write 'com.apple.dock' 'wvous-tl-modifier' -int 1048576

  # Screen Saver: Hot Corners… Bottom Left: Put Display to Sleep
  defaults write 'com.apple.dock' 'wvous-bl-corner' -int 10
  defaults write 'com.apple.dock' 'wvous-bl-modifier' -int 0

### Dock

  # Size: 32
  defaults write 'com.apple.dock' 'tilesize' -int 32

  # Magnification: off
  defaults write 'com.apple.dock' 'magnification' -bool false
  defaults write 'com.apple.dock' 'largesize' -int 64

  # Position on screen: Left
  defaults write 'com.apple.dock' 'orientation' -string 'right'

  # Minimize windows using: Scale effect
  defaults write 'com.apple.dock' 'mineffect' -string 'scale'

  # Animate opening applications: off
  defaults write 'com.apple.dock' 'launchanim' -bool false

### Security & Privacy

  # General: Require password: on
  defaults write 'com.apple.screensaver' 'askForPassword' -int 1

  # General: Require password: 5 seconds after sleep or screen saver begins
  defaults write 'com.apple.screensaver' 'askForPasswordDelay' -int 5

### Energy Saver

  # Power > Turn display off after: 20 min
  sudo pmset -c displaysleep 20

  # Power > Prevent computer from sleeping automatically when the display is off: enabled
  sudo pmset -c sleep 0

  # Power > Put hard disks to sleep when possible: 60 min
  sudo pmset -c disksleep 60

  # Power > Wake for Ethernet network access: enabled
  sudo pmset -c womp 1

  # Power > Start up automatically after a power failure: enabled
  sudo pmset -c autorestart 1

  # Power > Enable Power Nap: enabled
  sudo pmset -c powernap 1

### Mouse

  # Scroll direction: natural: off
  defaults write -g 'com.apple.swipescrolldirection' -bool false

### Trackpad

  # Point & Click: Tap to click: on
  defaults -currentHost write -g 'com.apple.mouse.tapBehavior' -int 1

### Sound

  # Sound Effects: Select an alert sound: Sosumi
  defaults write 'com.apple.systemsound' 'com.apple.sound.beep.sound' -string '/System/Library/Sounds/Sosumi.aiff'

  # Sound Effects: Play user interface sound effects: off
  defaults write 'com.apple.systemsound' 'com.apple.sound.uiaudio.enabled' -int 0

  # Sound Effects: Play feedback when volume is changed: off
  defaults write -g 'com.apple.sound.beep.feedback' -int 0

### Sharing

  # Computer Name
  sudo systemsetup -setcomputername $(hostname -s | perl -nE 'say ucfirst' | perl -np -e 'chomp')

  # Local Hostname
  sudo systemsetup -setlocalsubnetname $(hostname -s) &> /dev/null

### Users & Groups

  # Current User > Advanced Options… > Login shell: /usr/local/bin/zsh
  sudo sh -c 'printf "%s\n" "/usr/local/bin/zsh" >> /etc/shells'
  sudo chsh -s /usr/local/bin/zsh
  chsh -s /usr/local/bin/zsh
  sudo mkdir -p /private/var/root/Library/Caches/
  sudo touch "/private/var/root/.zshrc"
  touch "${HOME}/.zshrc"

### Dictation & Speech

  # Dictation: Dictation: On
  defaults write 'com.apple.speech.recognition.AppleSpeechRecognition.prefs' 'DictationIMMasterDictationEnabled' -bool true
  defaults write 'com.apple.speech.recognition.AppleSpeechRecognition.prefs' 'DictationIMIntroMessagePresented' -bool true

  # Dictation: Use Enhanced Dictation: on
  if [ -d '/System/Library/Speech/Recognizers/SpeechRecognitionCoreLanguages/en_US.SpeechRecognition' ]; then
    defaults write 'com.apple.speech.recognition.AppleSpeechRecognition.prefs' 'DictationIMPresentedOfflineUpgradeSuggestion' -bool true
    defaults write 'com.apple.speech.recognition.AppleSpeechRecognition.prefs' 'DictationIMSIFolderWasUpdated' -bool true
    defaults write 'com.apple.speech.recognition.AppleSpeechRecognition.prefs' 'DictationIMUseOnlyOfflineDictation' -bool true
  fi

  # Text to Speech: System Voice: Allison
  if [ -d '/System/Library/Speech/Voices/Allison.SpeechVoice' ]; then
    defaults write 'com.apple.speech.voice.prefs' 'VisibleIdentifiers' '{ "com.apple.speech.synthesis.voice.allison.premium" = 1; }'
    defaults write 'com.apple.speech.voice.prefs' 'SelectedVoiceName' -string 'Allison'
    defaults write 'com.apple.speech.voice.prefs' 'SelectedVoiceCreator' -int 1886745202
    defaults write 'com.apple.speech.voice.prefs' 'SelectedVoiceID' -int 184555197
  fi

### Date & Time

  # Clock: Display the time with seconds: on / Show date: on
  defaults write 'com.apple.menuextra.clock' 'DateFormat' -string 'EEE MMM d  h:mm:ss a'

### Accessibility

  # Display: Reduce transparency: on
  defaults write 'com.apple.universalaccess' 'reduceTransparency' -bool true

### Restart defaults server

  killall -u "$USER" cfprefsd
  osascript -e 'tell app "Finder" to quit'
  osascript -e 'tell app "Dock" to quit'
}
#+END_SRC

*** Create /etc/zshrc
#+BEGIN_SRC sh
function create_zshrc () {
  sudo tee /etc/zshrc > /dev/null <<-EOF
alias -g ...="../.."
alias -g ....="../../.."
alias -g .....="../../../.."
alias l="/bin/ls -lG"
alias ll="/bin/ls -alG"
alias lr="/bin/ls -alRG"
alias screen="/usr/bin/screen -U"
autoload -U compaudit
compaudit | xargs -L 1 sudo chown -HR root:wheel {} 2> /dev/null
compaudit | xargs -L 1 sudo chmod -HR go-w {} 2> /dev/null
autoload -U compinit
compinit -d "\${HOME}/Library/Caches/zcompdump"
bindkey "\e[3~" delete-char
bindkey "\e[A" up-line-or-search
bindkey "\e[B" down-line-or-search
export HISTFILE="\${HOME}/Library/Caches/zsh_history"
export HISTSIZE=50000
export SAVEHIST=50000
setopt APPEND_HISTORY
setopt AUTO_CD
setopt EXTENDED_HISTORY
setopt HIST_FIND_NO_DUPS
setopt INC_APPEND_HISTORY
setopt PROMPT_SUBST
setopt SHARE_HISTORY
stty erase \b
# Correctly display UTF-8 with combining characters.
if [ "\$TERM_PROGRAM" = "Apple_Terminal" ]; then
  setopt combiningchars
fi
function precmd () {
  print -Pn "\\e]7;file://%M\${PWD// /%%20}\a"
  print -Pn "\\e]2;%n@%m\a"
  print -Pn "\\e]1;%~\a"
}
gb () { git branch --no-color 2> /dev/null | /usr/bin/sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/' }
xd () { /usr/bin/xattr -d com.apple.diskimages.fsck \$* 2> /dev/null; /usr/bin/xattr -d com.apple.diskimages.recentcksum \$* 2> /dev/null; /usr/bin/xattr -d com.apple.metadata:kMDItemFinderComment \$* 2> /dev/null; /usr/bin/xattr -d com.apple.metadata:kMDItemDownloadedDate \$* 2> /dev/null; /usr/bin/xattr -d com.apple.metadata:kMDItemWhereFroms \$* 2> /dev/null; /usr/bin/xattr -d com.apple.quarantine \$* 2> /dev/null; /usr/bin/find . -name .DS_Store -delete; /usr/bin/find . -name Icon
 -delete }
sf () { /usr/bin/SetFile -P -d "\$1 12:00:00" -m "\$1 12:00:00" \$argv[2,\$] }
sd () { xd **/*; sf \$1 .; for i in **/*; do sf \$1 \$i; done; /usr/sbin/chown -R root ROOT 2> /dev/null; /usr/bin/chgrp -R wheel ROOT 2> /dev/null; /bin/chmod -R a+r ROOT 2> /dev/null; /bin/chmod -R u+w ROOT 2> /dev/null; /bin/chmod -R go-w ROOT 2> /dev/null; /usr/bin/find . -type d -exec /bin/chmod a+x '{}' ';'; /usr/bin/chgrp -R admin ROOT/Applications 2> /dev/null; /bin/chmod -R g+w ROOT/Applications 2> /dev/null; /usr/bin/chgrp -R admin ROOT/Library 2> /dev/null; /bin/chmod -R g+w ROOT/Library 2> /dev/null; /bin/chmod -R g-w ROOT/Library/Application\ Enhancers 2> /dev/null; /usr/bin/chgrp -R staff ROOT/Library/Application\ Support/Adobe 2> /dev/null; /bin/chmod -R g-w ROOT/Library/Bundles 2> /dev/null; /bin/chmod -R g-w ROOT/Library/InputManagers 2> /dev/null; /bin/chmod -R g-w ROOT/Library/Keychains 2> /dev/null; /bin/chmod -R g-w ROOT/Library/ScriptingAdditions 2> /dev/null; /bin/chmod -R g-w ROOT/Library/Tcl 2> /dev/null; /usr/bin/chgrp -R wheel ROOT/Library/Filesystems 2> /dev/null; /bin/chmod -R g-w ROOT/Library/Filesystems 2> /dev/null; /usr/bin/chgrp -R wheel ROOT/Library/LaunchAgents 2> /dev/null; /bin/chmod -R g-w ROOT/Library/LaunchAgents 2> /dev/null; /usr/bin/chgrp -R wheel ROOT/Library/LaunchDaemons 2> /dev/null; /bin/chmod -R g-w ROOT/Library/LaunchDaemons 2> /dev/null; /usr/bin/chgrp -R wheel ROOT/Library/PreferencePanes 2> /dev/null; /bin/chmod -R g-w ROOT/Library/PreferencePanes 2> /dev/null; /usr/bin/chgrp -R wheel ROOT/Library/StartupItems 2> /dev/null; /bin/chmod -R g-w ROOT/Library/StartupItems 2> /dev/null; /usr/bin/chgrp -R wheel ROOT/Library/Widgets 2> /dev/null; /bin/chmod -R g-w ROOT/Library/Widgets 2> /dev/null; /usr/bin/find . -name "kexts" -type d -exec /bin/chmod -R g-w '{}' ';'; /usr/bin/find . -name "*.kext" -exec /usr/sbin/chown -R root:wheel '{}' ';'; /usr/bin/find . -name "*.kext" -exec /bin/chmod -R g-w '{}' ';' }
PROMPT='%B%n@%m%b:%2~%B\$(gb) %#%b '
EOF
}
#+END_SRC

*** Configure All
#+BEGIN_SRC sh
function config_all () {
  config_file_map
  config_finder
  config_safari
  config_system_prefs
  create_zshrc
}
#+END_SRC

*** Display Help
#+BEGIN_SRC sh
clear
cat <<-END

Enter any of these commands:
  config_file_map
  config_finder
  config_safari
  config_system_prefs
  create_zshrc

Or:
  config_all

END
fi
#+END_SRC


** Step 4: Register Apps
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
